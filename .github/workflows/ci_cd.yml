name: CI/CD Portfolio

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: db_test
        ports:
          - 33306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v1
      - uses: supercharge/redis-github-action@1.1.0
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
      - name: Laravel Setup
        run: |
          cp .env.example .env
          composer install
          php artisan key:generate
          chmod -R 777 storage bootstrap/cache
      - name: Migrate Database and Run Test
        env:
          DB_DATABASE: db_test
          DB_PORT: 33306
          DB_PASSWORD: password
        run: |
          php artisan migrate
          ./vendor/bin/pest

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref_name == 'master'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Infisical CLI
        run: |
          curl -fsSL https://infisical.com/cli/install.sh | bash

      - name: Fetch Secrets with Infisical
        env:
          INFISICAL_SERVICE_TOKEN: ${{ secrets.INFISICAL_SERVICE_TOKEN }}
        run: |
          infisical export --env=production --output .env

      - name: Deploy API to Linode
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Determine Deployment Directory
            DEPLOY_DIR="/var/www/portfolio"

            echo "Deploying to $DEPLOY_DIR for branch ${{ github.ref_name }}..."

            # Common Deployment Steps
            cd $DEPLOY_DIR
            php artisan optimize:clear
            git fetch origin ${{ github.ref_name }}
            git reset --hard origin/${{ github.ref_name }}
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
            php artisan migrate --force
            php artisan optimize
            echo "" | sudo -S service php8.1-fpm reload

            echo "Deployment to $DEPLOY_DIR completed for branch ${{ github.ref_name }}!"
